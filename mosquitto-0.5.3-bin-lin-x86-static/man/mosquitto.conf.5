'\" -*- coding: us-ascii -*-
.if \n(.g .ds T< \\FC
.if \n(.g .ds T> \\F[\n[.fam]]
.de URL
\\$2 \(la\\$1\(ra\\$3
..
.if \n(.g .mso www.tmac
.TH mosquitto.conf 5 "3 March 2010" "" ""
.SH NAME
mosquitto.conf \- the configuration file for mosquitto
.SH SYNOPSIS
'nh
.fi
.ad l
\fBmosquitto.conf\fR \kx
.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
'in \n(.iu+\nxu
'in \n(.iu-\nxu
.ad b
'hy
.SH DESCRIPTION
\fBmosquitto.conf\fR is the configuration file for
mosquitto. This file can reside anywhere as long as mosquitto can read
it. By default, mosquitto does not need a configuration file and will
use the default values listed below. See
\fBmosquitto\fR(8)
for information on how to load a configuration file.
.SH "FILE FORMAT"
All lines with a # as the very first character are treated as a comment.
.PP
Configuration lines start with a variable name. The variable value is separated from the name by a single space.
.SH VARIABLES
.TP 
\*(T<\fBautosave_interval\fR\*(T>
The number of seconds that mosquitto will wait 
between each time it saves the in-memory database to 
disk. If set to 0, the in-memory database will only
be saved when mosquitto exits or when receiving the 
SIGUSR1 signal. Note that this setting only has an 
effect if persistence is enabled. Defaults to 1800 
seconds (30 minutes).
.TP 
\*(T<\fBext_sqlite_regex\fR\*(T>
The path to the sqlite3 regex extension which is
needed for wildcard subscription matching. If it is not
found, mosquitto will not start. The default when compiled
for Windows is "./sqlite3-pcre.dll" and for other platforms
"/usr/lib/sqlite3/pcre.so".

The sqlite3 pcre extension used is available at
http://git.altlinux.org/people/at/packages/?p=sqlite3-pcre.git
.TP 
\*(T<\fBinterface\fR\*(T>
Listen for incoming network connections on the
specified interface only. The port to listen to can be
changed from the default by appending it to the interface
name, e.g. eth0:1884. This is useful to restrict access to
certain network interfaces. To restrict access to mosquitto
to the local host only, use "interface lo". This option
may be specified multiple times.
.TP 
\*(T<\fBlog_dest\fR\*(T>
Send log messages to a particular destination.
Possible destinations are: stdout stderr syslog topic.
stdout and stderr log to the console on the named output.
syslog uses the userspace syslog facility which usually
ends up in /var/log/messages or similar and topic logs to the
broker topic '$SYS/broker/log/<severity>', where severity
is one of D, E, W, N, I which are debug, error, warning,
notice and information. Use "log_dest none" if you wish to
disable logging. Defaults to stderr. This option
may be specified multiple times.
.TP 
\*(T<\fBlog_type\fR\*(T>
Choose types of messages to log. Possible types are:
debug, error, warning, notice, information, none. Defaults
to error, warning, notice and information. This option may
be specified multiple times. Note that the debug type (used
for decoding incoming network packets) is never logged in
syslog or topics.
.TP 
\*(T<\fBport\fR\*(T>
Set the network port to listen on. Defaults to 1883. This option may be given any number of times. A socket will be created for each port listed.
.TP 
\*(T<\fBpersistence\fR\*(T>
Can be true or false. If true, connection, subscription and message data will be written to the disk in mosquitto.db at the location dictated by persistence_location. When mosquitto is restarted, it will reload the information stored in mosquitto.db. The data will be written to disk when mosquitto closes and also at periodic intervals as defined by autosave_interval. Writing of the persistence database may also be forced by sending mosquitto the SIGUSR1 signal. If false, the data will be stored in memory only. Defaults to false.
.TP 
\*(T<\fBpersistence_location\fR\*(T>
The path where the persistence database should be stored. Must end in a trailing slash. If not given, then the current directory is used.
.TP 
\*(T<\fBpid_file\fR\*(T>
Write a pid file to the file specified. If not given
(the default), no pid file will be written. If the pid file
cannot be written, mosquitto will exit. This option only
has an effect is mosquitto is run in daemon mode.

If mosquitto is being automatically started by an
init script it will usually be required to write a pid
file. This should then be configured as
/var/run/mosquitto.pid
.TP 
\*(T<\fBretry_interval\fR\*(T>
The integer number of seconds after a QoS=1 or QoS=2 message has been sent that mosquitto will wait before retrying when no response is received. If unset, defaults to 20 seconds.
.TP 
\*(T<\fBsys_interval\fR\*(T>
The integer number of seconds between updates of the $SYS subscription hierarchy, which provides status information about the broker. If unset, defaults to 10 seconds.
.TP 
\*(T<\fBuser\fR\*(T>
When run as root, change to this user and its primary
group on startup. If mosquitto is unable to change to this
user and group, it will exit with an error. The user
specified must have read/write access to the persistence
database if it is to be written. If run as a non-root user,
this setting has no effect. Defaults to mosquitto.
.SH FILES
mosquitto.conf
.SH BUGS
\fBmosquitto\fR bug information can be found at http://launchpad.net/mosquitto.
.SH "SEE ALSO"
\fBmosquitto\fR(8)
.SH AUTHOR
Roger Light <\*(T<roger@atchoo.org\*(T>>
